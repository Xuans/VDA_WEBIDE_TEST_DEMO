{"remainingRequest":"/Users/lijiancheng/Agree/Vue0815/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lijiancheng/Agree/Vue0815/src/views/global/roleList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lijiancheng/Agree/Vue0815/src/views/global/roleList.vue","mtime":1565848515399},{"path":"/Users/lijiancheng/Agree/Vue0815/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lijiancheng/Agree/Vue0815/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lijiancheng/Agree/Vue0815/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lijiancheng/Agree/Vue0815/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport {\r\n  getUserListPage,\r\n  removeUser,\r\n  editUser,\r\n  addUser\r\n} from \"../../api/api.js\";\r\n\r\nimport  {mixins} from '@v2-lib/vue.spa.plugin';\r\nexport default {\r\n  mixins:[mixins],\r\n  data() {\r\n    return {\r\n      searchForm: {\r\n        roleId: \"\",\r\n        roleName: \"\",\r\n        createUser: \"\"\r\n      },\r\n      checkedMenu: [],\r\n      isSingle: true,\r\n      isDubble: true,\r\n      roleList: [],\r\n      totalRole: 0,\r\n      rolePage: 1,\r\n      pageSize: 10,\r\n      listLoading: false,\r\n      selectedRoleList: [], //列表选中列\r\n\r\n      editRoleVisible: false, //编辑界面是否显示\r\n      editLoading: false,\r\n      editFormRules: {\r\n        name: [{ required: true, message: \"请输入角色名\", trigger: \"blur\" }],\r\n        remark: [{ required: true, message: \"请输入备注\", trigger: \"blur\" }]\r\n      },\r\n      //编辑界面数据\r\n      editForm: {\r\n        name: \"\",\r\n        remark: \"\"\r\n      },\r\n\r\n      addRoleVisible: false, //新增界面是否显示\r\n      addLoading: false,\r\n      addFormRules: {\r\n        name: [{ required: true, message: \"请输入角色名\", trigger: \"blur\" }],\r\n        remark: [{ required: true, message: \"请输入备注\", trigger: \"blur\" }]\r\n      },\r\n      //新增界面数据\r\n      addForm: {\r\n        name: \"\",\r\n        remark: \"\"\r\n      },\r\n\r\n      levelModalVisible: false,\r\n      roleMenuTree: [],\r\n      defaultProps: {\r\n        children: \"children\",\r\n        label: \"name\"\r\n      },\r\n      checekdTreeNodes: []\r\n    };\r\n  },\r\n  props: {\r\n    params: String //父组件传过来的参数\r\n  },\r\n  methods: {\r\n    getPageRole(val) {\r\n      this.rolePage = val;\r\n      this.getRoleList();\r\n    },\r\n    searchRoleList: function() {\r\n      this.rolePage = 1;\r\n      this.getRoleList();\r\n    },\r\n    //获取角色列表\r\n    getRoleList() {\r\n      var _this = this;\r\n      this.listLoading = true;\r\n      this.$get(`${this.$axios.server}/springmvc/role/listAllRoles`, {\r\n        createUser: this.searchForm.createUser,\r\n        roleName: this.searchForm.roleName,\r\n        roleId: this.searchForm.roleId,\r\n        pageNum: this.rolePage,\r\n        pageSize: this.pageSize\r\n      }).then(function(data) {\r\n        var roleList =\r\n          (data &&\r\n            data.content &&\r\n            data.content.data &&\r\n            data.content.data.roleList) ||\r\n          [];\r\n        _this.totalRole =\r\n          (data &&\r\n            data.content &&\r\n            data.content.data &&\r\n            data.content.data.totle) ||\r\n          0;\r\n\r\n        if (data.status) {\r\n          if (roleList) {\r\n            for (let i = 0; i < roleList.length; i++) {\r\n              roleList[i].createTime = _this.formatTime(roleList[i].createTime);\r\n            }\r\n            _this.roleList = roleList;\r\n          }\r\n        } else {\r\n        }\r\n      });\r\n      this.listLoading = false;\r\n    },\r\n\r\n    //重置\r\n    resetForm() {\r\n      this.searchForm.roleId = \"\";\r\n      this.searchForm.roleName = \"\";\r\n      this.searchForm.createUser = \"\";\r\n      this.rolePage = 1;\r\n      this.getRoleList();\r\n    },\r\n\r\n    //删除角色\r\n    delRole: function() {\r\n      var roleIds = [];\r\n      var _this = this;\r\n\r\n      for (let i = 0; i < this.selectedRoleList.length; i++) {\r\n        roleIds.push(this.selectedRoleList[i].roleId);\r\n      }\r\n      this.$confirm(\"确认删除该角色吗?\", \"删除角色\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      }).then(() => {\r\n        this.$deleteAxios(`${this.$axios.server}/springmvc/role/deleteRole`, {\r\n          roleIds: roleIds.join()\r\n        })\r\n          .then(function(data) {\r\n            if (data.status) {\r\n              _this.$notify({\r\n                title: \"删除角色成功\",\r\n                type: \"success\"\r\n              });\r\n              _this.resetForm();\r\n            } else {\r\n              this.$notify({\r\n                title: data.errorMsg,\r\n                type: \"success\"\r\n              });\r\n            }\r\n          })\r\n          .catch(function(err) {\r\n            _this.$notify({\r\n              title: err,\r\n              type: \"error\"\r\n            });\r\n          });\r\n      });\r\n    },\r\n\r\n    showEditRoleModal: function() {\r\n      this.editRoleVisible = true;\r\n      this.editForm.name = this.selectedRoleList[0].roleName;\r\n      this.editForm.remark = this.selectedRoleList[0].remark;\r\n    },\r\n    //编辑\r\n    surEditRole: function() {\r\n      this.$refs.editForm.validate(valid => {\r\n        if (valid) {\r\n          this.addLoading = true;\r\n          let params = {};\r\n          params.roleId = this.selectedRoleList[0].roleId;\r\n          params.roleName = this.editForm.name;\r\n          params.remark = this.editForm.remark;\r\n          this.$putAxios(\r\n            `${this.$axios.server}/springmvc/role/editRole`,\r\n            params\r\n          ).then(res => {\r\n            this.addLoading = false;\r\n            if (res.status) {\r\n              this.$notify({\r\n                title: \"修改角色成功\",\r\n                type: \"success\"\r\n              });\r\n         \r\n              this.editRoleVisible = false;\r\n              this.getRoleList();\r\n            } else {\r\n              this.$notify({\r\n                title: \"修改角色失败\",\r\n                type: \"error\"\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    //新增角色\r\n    surAddRole: function() {\r\n      var _this = this;\r\n      this.$refs.addForm.validate(valid => {\r\n        if (valid) {\r\n          this.addLoading = true;\r\n          let params = {};\r\n\r\n          params.roleName = this.addForm.name;\r\n          params.remark = this.addForm.remark;\r\n          this.$post(\r\n            `${this.$axios.server}/springmvc/role/addRole`,\r\n            params\r\n          ).then(res => {\r\n            _this.addLoading = false;\r\n            if (res.status) {\r\n              this.$notify({\r\n                title: \"创建角色成功\",\r\n                type: \"success\"\r\n              });\r\n              this.$refs[\"addForm\"].resetFields();\r\n              this.addRoleVisible = false;\r\n              this.resetForm();\r\n            } else {\r\n              this.$notify({\r\n                title: \"创建角色失败\",\r\n                message: res.errorMsg,\r\n                type: \"error\"\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    selectRole: function(sels) {\r\n      this.selectedRoleList = sels||{};\r\n\r\n      if (sels.length > 1) {\r\n        this.isDubble = false;\r\n        this.isSingle = true;\r\n      } else if (sels.length === 1) {\r\n        this.isDubble = false;\r\n        this.isSingle = false;\r\n      } else {\r\n        this.isDubble = true;\r\n        this.isSingle = true;\r\n      }\r\n    },\r\n\r\n    getRoleMenu: function() {\r\n      var _this = this;\r\n      let menus = [],\r\n        menuObj = {},\r\n        menuParent = {},\r\n        result = [];\r\n      _this.checekdTreeNodes = [];\r\n      _this.checkedMenu = [];\r\n      this.$get(`${this.$axios.server}/springmvc/role/listAllMenus.do`, {\r\n        roleId: _this.selectedRoleList[0].roleId\r\n      }).then(res => {\r\n        if (res.status) {\r\n          result = (res && res.content && res.content.treeDatas) || [];\r\n          if (result.length) {         \r\n              menus = result.map(function(item, idx) {\r\n                item.pId && (menuParent[item.pId] = 1);\r\n                item.id = item.id\r\n                  ? item.id\r\n                  : item.accCode\r\n                  ? item.pId + item.accCode\r\n                  : item.pId + idx;\r\n                item.pid = item.pId;\r\n                if (item.checked === \"true\" && item.accCode) {\r\n                  _this.checekdTreeNodes.push(item);\r\n                  _this.checkedMenu.push(item.id);\r\n                }\r\n                return item;\r\n              });\r\n\r\n              menus.map(i=>{\r\n                !i.pid&&(i.pid='');\r\n                let p=menuObj[i.pid];\r\n                if(!p){\r\n                  p=menuObj[i.pid]={\r\n                    id:i.pid,\r\n                    disabled:true,\r\n                    children:[]\r\n                  }\r\n                }else{\r\n                  !p.children&&(p.children=[]);\r\n                  p.disabled =true;\r\n                }\r\n                let item=menuObj[i.id]||{id:i.id};\r\n                item.name = i.name;\r\n                item.pid = i.pid;\r\n                item.checked = i.checked;\r\n                i.accCode&&(item.accCode = i.accCode);\r\n                item.type = i.type;\r\n                i.open&&(item.open =i.open);\r\n                menuObj[i.id]=item;\r\n                p.children.push(item);\r\n              });\r\n\r\n              Object.keys(menuObj)\r\n                  .filter(e=>!menuObj[e].children)\r\n                  .map(e=>delete menuObj[e]);\r\n\r\n               _this.roleMenuTree = menuObj[''].children;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    selectedMenuTree: function(data, ischeck, target) {\r\n      var oldCheckedTree = this.checekdTreeNodes,\r\n          flag = true;\r\n      \r\n      if(data.accCode){\r\n      if (ischeck) {\r\n        for (let i = 0; i < oldCheckedTree.length; i++) {\r\n        var item = oldCheckedTree[i];\r\n        if (item.pid === data.pid) {\r\n          this.checekdTreeNodes.splice(i, 1, data);\r\n          this.$refs.roleMenuTree.setCheckedNodes(this.checekdTreeNodes);\r\n          flag = false;\r\n        }\r\n        }\r\n        if(flag){\r\n          this.checekdTreeNodes = this.$refs.roleMenuTree.getCheckedNodes();\r\n        }\r\n\r\n      }else{\r\n          this.checekdTreeNodes = this.$refs.roleMenuTree.getCheckedNodes();\r\n      }\r\n\t  }\r\n\r\n    },\r\n    showLevelModal: function() {\r\n      this.getRoleMenu();\r\n      this.levelModalVisible = true;\r\n    },\r\n\r\n    //关联权限\r\n    associateLevel: function() {\r\n\t  var checkedNodes = this.$refs.roleMenuTree.getCheckedNodes(),\r\n\t  \t  parentNodes = this.$refs.roleMenuTree.getHalfCheckedNodes(),\r\n\t\t  accessIds = [],\r\n\t\t  parentObj = {};\r\n\r\n      for (let i = 0; i < checkedNodes.length; i++) {\r\n        var item = checkedNodes[i],\r\n          str = item.pid + \"=\" + item.accCode;\r\n\t\t\r\n\t\tparentObj[item.pid]=1;\r\n        accessIds.push(str);\r\n\t  }\r\n      for (let i = 0; i < parentNodes.length; i++) {\r\n        var item = parentNodes[i],\r\n          str = item.id + \"=PARENT_NODE\";\r\n\r\n\t\tif(!parentObj[item.id]){\r\n\t\t\taccessIds.push(str);\r\n\t\t}\r\n        \r\n\t  }\r\n\r\n      this.$putAxios(\r\n        `${this.$axios.server}/springmvc/role/relevanceAccess`,\r\n        {\r\n          roleId: this.selectedRoleList[0].roleId,\r\n          accessIds: accessIds.join()\r\n        }\r\n      ).then(res => {\r\n        if (res.status) {\r\n          this.$notify({\r\n            title: \"关联权限成功\",\r\n            type: \"success\"\r\n          });\r\n          this.levelModalVisible = false;\r\n        } else {\r\n          this.$notify({\r\n            title: \"关联权限失败\",\r\n            message: res.errorMsg,\r\n            type: \"error\"\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    formatTime: function(data) {\r\n      var date = data && new Date(data);\r\n\r\n      if (data && date) {\r\n        return (\r\n          date.getFullYear() +\r\n          \"-\" +\r\n          (date.getMonth() + 1 > 9\r\n            ? date.getMonth() + 1\r\n            : \"0\" + (date.getMonth() + 1)) +\r\n          \"-\" +\r\n          (date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate()) +\r\n          \" \" +\r\n          (date.getHours() > 9 ? date.getHours() : \"0\" + date.getHours()) +\r\n          \":\" +\r\n          (date.getMinutes() > 9\r\n            ? date.getMinutes()\r\n            : \"0\" + date.getMinutes()) +\r\n          \":\" +\r\n          (date.getSeconds() > 9 ? date.getSeconds() : \"0\" + date.getSeconds())\r\n        );\r\n      } else {\r\n        return \"\";\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getRoleList();\r\n    console.log(\"刷新表格页面,参数\", this.params);\r\n  },\r\n  resume() {\r\n    console.log(\"表格页面resume\");\r\n  },\r\n  pause() {\r\n    console.log(\"表格页面pause\");\r\n  }\r\n};\r\n",{"version":3,"sources":["roleList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"roleList.vue","sourceRoot":"src/views/global","sourcesContent":["<template>\r\n  <section>\r\n    <!--工具条-->\r\n    <el-col :span=\"24\" class=\"aweb-table-toolbar\" style=\"padding-bottom: 0px;\">\r\n      <el-form :inline=\"true\" :model=\"searchForm\" size=\"mini\">\r\n        <el-form-item label=\"角色ID\">\r\n          <el-input v-model=\"searchForm.roleId\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"角色名\">\r\n          <el-input v-model=\"searchForm.roleName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"创建用户\">\r\n          <el-input v-model=\"searchForm.createUser\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-form size=\"mini\">\r\n        <el-form-item>\r\n          <el-button type=\"primary\" v-on:click=\"searchRoleList\">查询</el-button>\r\n          <el-button type=\"primary\" @click=\"resetForm\">重置</el-button>\r\n          <el-button type=\"primary\" v-on:click=\"addRoleVisible = true\">新建</el-button>\r\n          <el-button type=\"primary\" @click=\"showEditRoleModal\" :disabled=\"isSingle\">修改</el-button>\r\n          <el-button type=\"primary\" v-on:click=\"delRole\" :disabled=\"isDubble\">删除</el-button>\r\n          <el-button type=\"primary\" @click=\"showLevelModal\" :disabled=\"isSingle\">关联权限</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-col>\r\n\r\n    <!--列表-->\r\n    <el-table\r\n      :data=\"roleList\"\r\n      v-loading=\"listLoading\"\r\n      @selection-change=\"selectRole\"\r\n      style=\"width: 100%;\"\r\n      max-height=\"500\"\r\n    >\r\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n      <el-table-column type=\"index\" width=\"60\"></el-table-column>\r\n      <el-table-column prop=\"roleId\" label=\"角色ID\" width=\"120\" sortable></el-table-column>\r\n      <el-table-column prop=\"roleName\" label=\"角色名\" width=\"120\" sortable></el-table-column>\r\n      <el-table-column prop=\"createUser\" label=\"创建用户\" width=\"120\" sortable></el-table-column>\r\n      <el-table-column prop=\"createTime\" label=\"创建时间\" min-width=\"120\" sortable></el-table-column>\r\n      <el-table-column prop=\"updateTime\" label=\"更新时间\" min-width=\"120\" sortable></el-table-column>\r\n      <el-table-column prop=\"remark\" label=\"备注\" min-width=\"180\" sortable></el-table-column>\r\n    </el-table>\r\n\r\n    <!--工具条-->\r\n    <el-col :span=\"24\" class=\"aweb-table-toolbar\">\r\n      <el-pagination\r\n        layout=\"prev, pager, next\"\r\n        @current-change=\"getPageRole\"\r\n        :page-size=\"pageSize\"\r\n        :total=\"totalRole\"\r\n        style=\"float:right;\"\r\n      ></el-pagination>\r\n    </el-col>\r\n\r\n    <!--新增界面-->\r\n    <el-dialog title=\"新增角色\" :visible.sync=\"addRoleVisible\" :close-on-click-modal=\"false\">\r\n      <el-form :model=\"addForm\" label-width=\"80px\" :rules=\"addFormRules\" ref=\"addForm\" size=\"mini\">\r\n        <el-form-item label=\"角色名\" prop=\"name\">\r\n          <el-input v-model=\"addForm.name\" auto-complete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\" prop=\"remark\">\r\n          <el-input v-model=\"addForm.remark\" auto-complete=\"off\" type=\"textarea\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click.native=\"surAddRole\" :loading=\"addLoading\">确认</el-button>\r\n        <el-button @click.native=\"addRoleVisible = false\">取消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!--编辑界面-->\r\n    <el-dialog title=\"编辑角色\" :visible.sync=\"editRoleVisible\" :close-on-click-modal=\"false\">\r\n      <el-form\r\n        :model=\"editForm\"\r\n        label-width=\"80px\"\r\n        :rules=\"editFormRules\"\r\n        ref=\"editForm\"\r\n        size=\"mini\"\r\n      >\r\n        <el-form-item label=\"角色名\" prop=\"name\">\r\n          <el-input v-model=\"editForm.name\" auto-complete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\" prop=\"remark\">\r\n          <el-input v-model=\"editForm.remark\" auto-complete=\"off\" type=\"textarea\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click.native=\"surEditRole\" :loading=\"editLoading\">确认</el-button>\r\n        <el-button @click.native=\"editRoleVisible = false\">取消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!--关联权限-->\r\n    <el-dialog title=\"配置角色\" :visible.sync=\"levelModalVisible\" :close-on-click-modal=\"false\">\r\n      <div class=\"role-tree-wrap\">\r\n        <el-tree\r\n          :data=\"roleMenuTree\"\r\n          show-checkbox\r\n          default-expand-all\r\n          node-key=\"id\"\r\n          ref=\"roleMenuTree\"\r\n          highlight-current\r\n          :props=\"defaultProps\"\r\n          @check-change=\"selectedMenuTree\"\r\n          :default-checked-keys=\"checkedMenu\"\r\n          style=\"max-height:500px;overflow:auto;\"\r\n        ></el-tree>\r\n      </div>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click.native=\"associateLevel\" :loading=\"addLoading\">确认</el-button>\r\n        <el-button @click.native=\"levelModalVisible = false\">取消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getUserListPage,\r\n  removeUser,\r\n  editUser,\r\n  addUser\r\n} from \"../../api/api.js\";\r\n\r\nimport  {mixins} from '@v2-lib/vue.spa.plugin';\r\nexport default {\r\n  mixins:[mixins],\r\n  data() {\r\n    return {\r\n      searchForm: {\r\n        roleId: \"\",\r\n        roleName: \"\",\r\n        createUser: \"\"\r\n      },\r\n      checkedMenu: [],\r\n      isSingle: true,\r\n      isDubble: true,\r\n      roleList: [],\r\n      totalRole: 0,\r\n      rolePage: 1,\r\n      pageSize: 10,\r\n      listLoading: false,\r\n      selectedRoleList: [], //列表选中列\r\n\r\n      editRoleVisible: false, //编辑界面是否显示\r\n      editLoading: false,\r\n      editFormRules: {\r\n        name: [{ required: true, message: \"请输入角色名\", trigger: \"blur\" }],\r\n        remark: [{ required: true, message: \"请输入备注\", trigger: \"blur\" }]\r\n      },\r\n      //编辑界面数据\r\n      editForm: {\r\n        name: \"\",\r\n        remark: \"\"\r\n      },\r\n\r\n      addRoleVisible: false, //新增界面是否显示\r\n      addLoading: false,\r\n      addFormRules: {\r\n        name: [{ required: true, message: \"请输入角色名\", trigger: \"blur\" }],\r\n        remark: [{ required: true, message: \"请输入备注\", trigger: \"blur\" }]\r\n      },\r\n      //新增界面数据\r\n      addForm: {\r\n        name: \"\",\r\n        remark: \"\"\r\n      },\r\n\r\n      levelModalVisible: false,\r\n      roleMenuTree: [],\r\n      defaultProps: {\r\n        children: \"children\",\r\n        label: \"name\"\r\n      },\r\n      checekdTreeNodes: []\r\n    };\r\n  },\r\n  props: {\r\n    params: String //父组件传过来的参数\r\n  },\r\n  methods: {\r\n    getPageRole(val) {\r\n      this.rolePage = val;\r\n      this.getRoleList();\r\n    },\r\n    searchRoleList: function() {\r\n      this.rolePage = 1;\r\n      this.getRoleList();\r\n    },\r\n    //获取角色列表\r\n    getRoleList() {\r\n      var _this = this;\r\n      this.listLoading = true;\r\n      this.$get(`${this.$axios.server}/springmvc/role/listAllRoles`, {\r\n        createUser: this.searchForm.createUser,\r\n        roleName: this.searchForm.roleName,\r\n        roleId: this.searchForm.roleId,\r\n        pageNum: this.rolePage,\r\n        pageSize: this.pageSize\r\n      }).then(function(data) {\r\n        var roleList =\r\n          (data &&\r\n            data.content &&\r\n            data.content.data &&\r\n            data.content.data.roleList) ||\r\n          [];\r\n        _this.totalRole =\r\n          (data &&\r\n            data.content &&\r\n            data.content.data &&\r\n            data.content.data.totle) ||\r\n          0;\r\n\r\n        if (data.status) {\r\n          if (roleList) {\r\n            for (let i = 0; i < roleList.length; i++) {\r\n              roleList[i].createTime = _this.formatTime(roleList[i].createTime);\r\n            }\r\n            _this.roleList = roleList;\r\n          }\r\n        } else {\r\n        }\r\n      });\r\n      this.listLoading = false;\r\n    },\r\n\r\n    //重置\r\n    resetForm() {\r\n      this.searchForm.roleId = \"\";\r\n      this.searchForm.roleName = \"\";\r\n      this.searchForm.createUser = \"\";\r\n      this.rolePage = 1;\r\n      this.getRoleList();\r\n    },\r\n\r\n    //删除角色\r\n    delRole: function() {\r\n      var roleIds = [];\r\n      var _this = this;\r\n\r\n      for (let i = 0; i < this.selectedRoleList.length; i++) {\r\n        roleIds.push(this.selectedRoleList[i].roleId);\r\n      }\r\n      this.$confirm(\"确认删除该角色吗?\", \"删除角色\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      }).then(() => {\r\n        this.$deleteAxios(`${this.$axios.server}/springmvc/role/deleteRole`, {\r\n          roleIds: roleIds.join()\r\n        })\r\n          .then(function(data) {\r\n            if (data.status) {\r\n              _this.$notify({\r\n                title: \"删除角色成功\",\r\n                type: \"success\"\r\n              });\r\n              _this.resetForm();\r\n            } else {\r\n              this.$notify({\r\n                title: data.errorMsg,\r\n                type: \"success\"\r\n              });\r\n            }\r\n          })\r\n          .catch(function(err) {\r\n            _this.$notify({\r\n              title: err,\r\n              type: \"error\"\r\n            });\r\n          });\r\n      });\r\n    },\r\n\r\n    showEditRoleModal: function() {\r\n      this.editRoleVisible = true;\r\n      this.editForm.name = this.selectedRoleList[0].roleName;\r\n      this.editForm.remark = this.selectedRoleList[0].remark;\r\n    },\r\n    //编辑\r\n    surEditRole: function() {\r\n      this.$refs.editForm.validate(valid => {\r\n        if (valid) {\r\n          this.addLoading = true;\r\n          let params = {};\r\n          params.roleId = this.selectedRoleList[0].roleId;\r\n          params.roleName = this.editForm.name;\r\n          params.remark = this.editForm.remark;\r\n          this.$putAxios(\r\n            `${this.$axios.server}/springmvc/role/editRole`,\r\n            params\r\n          ).then(res => {\r\n            this.addLoading = false;\r\n            if (res.status) {\r\n              this.$notify({\r\n                title: \"修改角色成功\",\r\n                type: \"success\"\r\n              });\r\n         \r\n              this.editRoleVisible = false;\r\n              this.getRoleList();\r\n            } else {\r\n              this.$notify({\r\n                title: \"修改角色失败\",\r\n                type: \"error\"\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    //新增角色\r\n    surAddRole: function() {\r\n      var _this = this;\r\n      this.$refs.addForm.validate(valid => {\r\n        if (valid) {\r\n          this.addLoading = true;\r\n          let params = {};\r\n\r\n          params.roleName = this.addForm.name;\r\n          params.remark = this.addForm.remark;\r\n          this.$post(\r\n            `${this.$axios.server}/springmvc/role/addRole`,\r\n            params\r\n          ).then(res => {\r\n            _this.addLoading = false;\r\n            if (res.status) {\r\n              this.$notify({\r\n                title: \"创建角色成功\",\r\n                type: \"success\"\r\n              });\r\n              this.$refs[\"addForm\"].resetFields();\r\n              this.addRoleVisible = false;\r\n              this.resetForm();\r\n            } else {\r\n              this.$notify({\r\n                title: \"创建角色失败\",\r\n                message: res.errorMsg,\r\n                type: \"error\"\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    selectRole: function(sels) {\r\n      this.selectedRoleList = sels||{};\r\n\r\n      if (sels.length > 1) {\r\n        this.isDubble = false;\r\n        this.isSingle = true;\r\n      } else if (sels.length === 1) {\r\n        this.isDubble = false;\r\n        this.isSingle = false;\r\n      } else {\r\n        this.isDubble = true;\r\n        this.isSingle = true;\r\n      }\r\n    },\r\n\r\n    getRoleMenu: function() {\r\n      var _this = this;\r\n      let menus = [],\r\n        menuObj = {},\r\n        menuParent = {},\r\n        result = [];\r\n      _this.checekdTreeNodes = [];\r\n      _this.checkedMenu = [];\r\n      this.$get(`${this.$axios.server}/springmvc/role/listAllMenus.do`, {\r\n        roleId: _this.selectedRoleList[0].roleId\r\n      }).then(res => {\r\n        if (res.status) {\r\n          result = (res && res.content && res.content.treeDatas) || [];\r\n          if (result.length) {         \r\n              menus = result.map(function(item, idx) {\r\n                item.pId && (menuParent[item.pId] = 1);\r\n                item.id = item.id\r\n                  ? item.id\r\n                  : item.accCode\r\n                  ? item.pId + item.accCode\r\n                  : item.pId + idx;\r\n                item.pid = item.pId;\r\n                if (item.checked === \"true\" && item.accCode) {\r\n                  _this.checekdTreeNodes.push(item);\r\n                  _this.checkedMenu.push(item.id);\r\n                }\r\n                return item;\r\n              });\r\n\r\n              menus.map(i=>{\r\n                !i.pid&&(i.pid='');\r\n                let p=menuObj[i.pid];\r\n                if(!p){\r\n                  p=menuObj[i.pid]={\r\n                    id:i.pid,\r\n                    disabled:true,\r\n                    children:[]\r\n                  }\r\n                }else{\r\n                  !p.children&&(p.children=[]);\r\n                  p.disabled =true;\r\n                }\r\n                let item=menuObj[i.id]||{id:i.id};\r\n                item.name = i.name;\r\n                item.pid = i.pid;\r\n                item.checked = i.checked;\r\n                i.accCode&&(item.accCode = i.accCode);\r\n                item.type = i.type;\r\n                i.open&&(item.open =i.open);\r\n                menuObj[i.id]=item;\r\n                p.children.push(item);\r\n              });\r\n\r\n              Object.keys(menuObj)\r\n                  .filter(e=>!menuObj[e].children)\r\n                  .map(e=>delete menuObj[e]);\r\n\r\n               _this.roleMenuTree = menuObj[''].children;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    selectedMenuTree: function(data, ischeck, target) {\r\n      var oldCheckedTree = this.checekdTreeNodes,\r\n          flag = true;\r\n      \r\n      if(data.accCode){\r\n      if (ischeck) {\r\n        for (let i = 0; i < oldCheckedTree.length; i++) {\r\n        var item = oldCheckedTree[i];\r\n        if (item.pid === data.pid) {\r\n          this.checekdTreeNodes.splice(i, 1, data);\r\n          this.$refs.roleMenuTree.setCheckedNodes(this.checekdTreeNodes);\r\n          flag = false;\r\n        }\r\n        }\r\n        if(flag){\r\n          this.checekdTreeNodes = this.$refs.roleMenuTree.getCheckedNodes();\r\n        }\r\n\r\n      }else{\r\n          this.checekdTreeNodes = this.$refs.roleMenuTree.getCheckedNodes();\r\n      }\r\n\t  }\r\n\r\n    },\r\n    showLevelModal: function() {\r\n      this.getRoleMenu();\r\n      this.levelModalVisible = true;\r\n    },\r\n\r\n    //关联权限\r\n    associateLevel: function() {\r\n\t  var checkedNodes = this.$refs.roleMenuTree.getCheckedNodes(),\r\n\t  \t  parentNodes = this.$refs.roleMenuTree.getHalfCheckedNodes(),\r\n\t\t  accessIds = [],\r\n\t\t  parentObj = {};\r\n\r\n      for (let i = 0; i < checkedNodes.length; i++) {\r\n        var item = checkedNodes[i],\r\n          str = item.pid + \"=\" + item.accCode;\r\n\t\t\r\n\t\tparentObj[item.pid]=1;\r\n        accessIds.push(str);\r\n\t  }\r\n      for (let i = 0; i < parentNodes.length; i++) {\r\n        var item = parentNodes[i],\r\n          str = item.id + \"=PARENT_NODE\";\r\n\r\n\t\tif(!parentObj[item.id]){\r\n\t\t\taccessIds.push(str);\r\n\t\t}\r\n        \r\n\t  }\r\n\r\n      this.$putAxios(\r\n        `${this.$axios.server}/springmvc/role/relevanceAccess`,\r\n        {\r\n          roleId: this.selectedRoleList[0].roleId,\r\n          accessIds: accessIds.join()\r\n        }\r\n      ).then(res => {\r\n        if (res.status) {\r\n          this.$notify({\r\n            title: \"关联权限成功\",\r\n            type: \"success\"\r\n          });\r\n          this.levelModalVisible = false;\r\n        } else {\r\n          this.$notify({\r\n            title: \"关联权限失败\",\r\n            message: res.errorMsg,\r\n            type: \"error\"\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    formatTime: function(data) {\r\n      var date = data && new Date(data);\r\n\r\n      if (data && date) {\r\n        return (\r\n          date.getFullYear() +\r\n          \"-\" +\r\n          (date.getMonth() + 1 > 9\r\n            ? date.getMonth() + 1\r\n            : \"0\" + (date.getMonth() + 1)) +\r\n          \"-\" +\r\n          (date.getDate() > 9 ? date.getDate() : \"0\" + date.getDate()) +\r\n          \" \" +\r\n          (date.getHours() > 9 ? date.getHours() : \"0\" + date.getHours()) +\r\n          \":\" +\r\n          (date.getMinutes() > 9\r\n            ? date.getMinutes()\r\n            : \"0\" + date.getMinutes()) +\r\n          \":\" +\r\n          (date.getSeconds() > 9 ? date.getSeconds() : \"0\" + date.getSeconds())\r\n        );\r\n      } else {\r\n        return \"\";\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getRoleList();\r\n    console.log(\"刷新表格页面,参数\", this.params);\r\n  },\r\n  resume() {\r\n    console.log(\"表格页面resume\");\r\n  },\r\n  pause() {\r\n    console.log(\"表格页面pause\");\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.aweb-table-toolbar {\r\n  padding: 12px;\r\n  text-align: left;\r\n}\r\n</style>"]}]}