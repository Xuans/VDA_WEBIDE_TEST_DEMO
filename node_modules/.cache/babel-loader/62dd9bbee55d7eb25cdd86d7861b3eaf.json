{"remainingRequest":"/Users/lijiancheng/Agree/Vue0815/node_modules/babel-loader/lib/index.js!/Users/lijiancheng/Agree/Vue0815/src/api/index.js","dependencies":[{"path":"/Users/lijiancheng/Agree/Vue0815/src/api/index.js","mtime":1566183328922},{"path":"/Users/lijiancheng/Agree/Vue0815/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lijiancheng/Agree/Vue0815/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport source from \"./source.js\";\nimport { MessageBox, Notification } from 'element-ui';\n\nfor (var i in source) {\n  axios[i] = source[i];\n} // axios 配置\n\n\naxios.defaults.timeout = 60000;\naxios.defaults.withCredentials = true; //axios.defaults.headers[\"Content-Type\"] = `application/x-www-form-urlencoded`; //如果所有请求都是这种形式可以打开统一配置，如果不是就要修改以下拦截加判断\n//拦截器为了适配AWEB后台，这里给每个接口统一加上token，并配置对应的请求头\n// axios.interceptors.request.use(\n//   config => {\n//     let ctoken = global.ctoken||'';\n//     if (ctoken) {\n//       config.data = qs.stringify({\n//         ...config.data,\n//         ctoken\n//       })     \n//       config.headers[\"Content-Type\"] = `application/x-www-form-urlencoded`;\n//     }\n//     return config;\n//   },\n//   err => {\n//     return Promise.reject(err);\n//   });\n// 拦截器为了适配AWEB后台，这里是当token过期是，页面跳转到登陆页\n\naxios.interceptors.response.use(function (response) {\n  if (!response) {\n    Notification.error({\n      title: '错误',\n      message: '系统错误0X08:后台服务报错'\n    });\n    return false;\n  }\n\n  var data = response.data;\n\n  if (data.status) {\n    return data;\n  } else {\n    switch (data.errorCode) {\n      case '100001':\n        MessageBox.confirm('会话超时，请重新登录！').then(function () {\n          sessionStorage.removeItem(\"user\");\n          localStorage.removeItem('ctoken');\n          window.location.href = './';\n        }).catch(function () {});\n        break;\n\n      case '100002':\n        Notification.error({\n          title: '错误',\n          message: '系统错误0X06:' + data.errorMsg || '字段校验失败'\n        });\n        break;\n\n      default:\n        return data;\n    } // return Promise.reject(data)\n\n  }\n}, function (error) {\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        // 401 清除token信息并跳转到登录页面\n        localStorage.removeItem('ctoken');\n        window.location.href = '/login';\n      // router.go(0);\n    }\n  }\n\n  return Promise.reject(error.response && error.response.data);\n});",{"version":3,"sources":["/Users/lijiancheng/Agree/Vue0815/src/api/index.js"],"names":["axios","source","MessageBox","Notification","i","defaults","timeout","withCredentials","interceptors","response","use","error","title","message","data","status","errorCode","confirm","then","sessionStorage","removeItem","localStorage","window","location","href","catch","errorMsg","Promise","reject"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;AAEA,SAASC,UAAT,EAAoBC,YAApB,QAAwC,YAAxC;;AAGA,KAAI,IAAIC,CAAR,IAAcH,MAAd,EAAqB;AACjBD,EAAAA,KAAK,CAACI,CAAD,CAAL,GAAWH,MAAM,CAACG,CAAD,CAAjB;AACD,C,CACH;;;AACAJ,KAAK,CAACK,QAAN,CAAeC,OAAf,GAAyB,KAAzB;AACAN,KAAK,CAACK,QAAN,CAAeE,eAAf,GAAiC,IAAjC,C,CACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAP,KAAK,CAACQ,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACI,UAACD,QAAD,EAAc;AAEZ,MAAI,CAACA,QAAL,EAAe;AACbN,IAAAA,YAAY,CAACQ,KAAb,CAAmB;AACjBC,MAAAA,KAAK,EAAE,IADU;AAEjBC,MAAAA,OAAO,EAAE;AAFQ,KAAnB;AAIA,WAAO,KAAP;AACD;;AACD,MAAIC,IAAI,GAAGL,QAAQ,CAACK,IAApB;;AACA,MAAIA,IAAI,CAACC,MAAT,EAAiB;AACb,WAAOD,IAAP;AACH,GAFD,MAEO;AACL,YAAOA,IAAI,CAACE,SAAZ;AAEE,WAAK,QAAL;AACAd,QAAAA,UAAU,CAACe,OAAX,CAAmB,aAAnB,EACCC,IADD,CACM,YAAK;AAEPC,UAAAA,cAAc,CAACC,UAAf,CAA0B,MAA1B;AACAC,UAAAA,YAAY,CAACD,UAAb,CAAwB,QAAxB;AACAE,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,IAAvB;AAIH,SATD,EAUCC,KAVD,CAUO,YAAK,CAAE,CAVd;AAYA;;AAEA,WAAK,QAAL;AACAtB,QAAAA,YAAY,CAACQ,KAAb,CAAmB;AACfC,UAAAA,KAAK,EAAE,IADQ;AAEfC,UAAAA,OAAO,EAAE,cAAYC,IAAI,CAACY,QAAjB,IAA2B;AAFrB,SAAnB;AAIA;;AAGA;AACI,eAAOZ,IAAP;AA1BN,KADK,CA6BL;;AACD;AACF,CA5CL,EA6CI,UAAAH,KAAK,EAAI;AACP,MAAIA,KAAK,CAACF,QAAV,EAAoB;AAClB,YAAQE,KAAK,CAACF,QAAN,CAAeM,MAAvB;AACE,WAAK,GAAL;AACE;AACAM,QAAAA,YAAY,CAACD,UAAb,CAAwB,QAAxB;AACAE,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACE;AALN;AAOD;;AAED,SAAOG,OAAO,CAACC,MAAR,CAAejB,KAAK,CAACF,QAAN,IAAkBE,KAAK,CAACF,QAAN,CAAeK,IAAhD,CAAP;AACD,CAzDL","sourcesContent":["\nimport axios from 'axios';\nimport source from './source.js';\n\nimport { MessageBox,Notification } from 'element-ui';\n\n\nfor(let i  in source){\n    axios[i] = source[i];\n  }\n// axios 配置\naxios.defaults.timeout = 60000;\naxios.defaults.withCredentials = true;\n//axios.defaults.headers[\"Content-Type\"] = `application/x-www-form-urlencoded`; //如果所有请求都是这种形式可以打开统一配置，如果不是就要修改以下拦截加判断\n\n//拦截器为了适配AWEB后台，这里给每个接口统一加上token，并配置对应的请求头\n// axios.interceptors.request.use(\n//   config => {\n\n//     let ctoken = global.ctoken||'';\n//     if (ctoken) {\n//       config.data = qs.stringify({\n//         ...config.data,\n//         ctoken\n//       })     \n//       config.headers[\"Content-Type\"] = `application/x-www-form-urlencoded`;\n//     }\n//     return config;\n//   },\n//   err => {\n//     return Promise.reject(err);\n//   });\n\n// 拦截器为了适配AWEB后台，这里是当token过期是，页面跳转到登陆页\naxios.interceptors.response.use(\n    (response) => {\n\n      if (!response) {\n        Notification.error({\n          title: '错误',\n          message: '系统错误0X08:后台服务报错'\n        })\n        return false;\n      }\n      let data = response.data;\n      if (data.status) {\n          return data\n      } else {\n        switch(data.errorCode){\n          \n          case '100001':\n          MessageBox.confirm('会话超时，请重新登录！')\n          .then(()=> {\n        \n              sessionStorage.removeItem(\"user\"); \n              localStorage.removeItem('ctoken');  \n              window.location.href = './';\n\n              \n  \n          })\n          .catch(()=> {});\n        \n          break;\n\n          case '100002':\n          Notification.error({               \n              title: '错误',\n              message: '系统错误0X06:'+data.errorMsg||'字段校验失败'                \n          })\n          break;\n\n\n          default:\n              return data;\n      }\n        // return Promise.reject(data)\n      }\n    },\n    error => {\n      if (error.response) {\n        switch (error.response.status) {\n          case 401:\n            // 401 清除token信息并跳转到登录页面\n            localStorage.removeItem('ctoken');\n            window.location.href = '/login';\n              // router.go(0);\n        }\n      }\n  \n      return Promise.reject(error.response && error.response.data)\n    });\n\n"]}]}