{"remainingRequest":"/Users/lijiancheng/Agree/Vue0815/node_modules/babel-loader/lib/index.js!/Users/lijiancheng/Agree/Vue0815/src/api/pipe.vda.js","dependencies":[{"path":"/Users/lijiancheng/Agree/Vue0815/src/api/pipe.vda.js","mtime":1566445776565},{"path":"/Users/lijiancheng/Agree/Vue0815/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lijiancheng/Agree/Vue0815/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport qs from 'qs';\nvar host = 'v1/ds/dvms/vda';\nvar signIn = 'loginController/signIn';\nvar apiList = 'visualDataModelController/queryTreeDataModels';\nvar dataPreview = 'visualDataModelController/dataPreview';\nvar username = 'admin';\nvar password = 'agreexian!';\nvar token = '';\n\nvar signInFn = function signInFn() {\n  return new Promise(r, function (j) {\n    axios.post(\"\".concat(host, \"/\").concat(signIn), qs.stringify({\n      username: username,\n      password: password\n    }), {\n      headers: {}\n    }).then(function (res) {\n      if (res.status) {\n        token = res.content.token;\n      } else {\n        j(res.errorMsg);\n      }\n\n      r(token);\n    }).catch(function (e) {\n      j(e);\n    });\n  });\n};\n\nexport default {\n  ready: function ready() {\n    return token ? new Promise(function (r) {\n      return r(token);\n    }) : signInFn();\n  },\n  list: function list() {\n    return axios.post(\"\".concat(host, \"/\").concat(apiList), qs.stringify({\n      token: token\n    }));\n  },\n  data: function data(id) {\n    return axios.post(\"\".concat(host, \"/\").concat(dataPreview), qs.stringify({\n      token: token,\n      dmUid: id\n    }));\n  }\n};",{"version":3,"sources":["/Users/lijiancheng/Agree/Vue0815/src/api/pipe.vda.js"],"names":["axios","qs","host","signIn","apiList","dataPreview","username","password","token","signInFn","Promise","r","j","post","stringify","headers","then","res","status","content","errorMsg","catch","e","ready","list","data","id","dmUid"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,IAAMC,IAAI,GAAG,gBAAb;AACA,IAAMC,MAAM,GAAG,wBAAf;AACA,IAAMC,OAAO,GAAG,+CAAhB;AACA,IAAMC,WAAW,GAAG,uCAApB;AACA,IAAMC,QAAQ,GAAG,OAAjB;AACA,IAAMC,QAAQ,GAAG,YAAjB;AAEA,IAAIC,KAAK,GAAG,EAAZ;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,SAAO,IAAIC,OAAJ,CAAYC,CAAZ,EAAc,UAAAC,CAAC,EAAI;AACtBZ,IAAAA,KAAK,CAACa,IAAN,WACOX,IADP,cACeC,MADf,GAEIF,EAAE,CAACa,SAAH,CAAa;AACTR,MAAAA,QAAQ,EAAEA,QADD;AAETC,MAAAA,QAAQ,EAAEA;AAFD,KAAb,CAFJ,EAMI;AACIQ,MAAAA,OAAO,EAAE;AADb,KANJ,EASOC,IATP,CASY,UAAAC,GAAG,EAAI;AACX,UAAIA,GAAG,CAACC,MAAR,EAAgB;AACZV,QAAAA,KAAK,GAAGS,GAAG,CAACE,OAAJ,CAAYX,KAApB;AACH,OAFD,MAEK;AACDI,QAAAA,CAAC,CAACK,GAAG,CAACG,QAAL,CAAD;AACH;;AACDT,MAAAA,CAAC,CAACH,KAAD,CAAD;AACH,KAhBL,EAgBOa,KAhBP,CAgBa,UAAAC,CAAC,EAAE;AACRV,MAAAA,CAAC,CAACU,CAAD,CAAD;AACH,KAlBL;AAmBH,GApBM,CAAP;AAqBH,CAtBD;;AAwBA,eAAe;AACXC,EAAAA,KADW,mBACH;AACJ,WAAOf,KAAK,GAAG,IAAIE,OAAJ,CAAY,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACH,KAAD,CAAL;AAAA,KAAb,CAAH,GAAgCC,QAAQ,EAApD;AACH,GAHU;AAIXe,EAAAA,IAJW,kBAIJ;AACH,WAAOxB,KAAK,CAACa,IAAN,WAAcX,IAAd,cAAsBE,OAAtB,GAAiCH,EAAE,CAACa,SAAH,CAAa;AACjDN,MAAAA,KAAK,EAAEA;AAD0C,KAAb,CAAjC,CAAP;AAGH,GARU;AASXiB,EAAAA,IATW,gBASNC,EATM,EASF;AACL,WAAO1B,KAAK,CAACa,IAAN,WAAcX,IAAd,cAAsBG,WAAtB,GAAqCJ,EAAE,CAACa,SAAH,CAAa;AACrDN,MAAAA,KAAK,EAAEA,KAD8C;AAErDmB,MAAAA,KAAK,EAAED;AAF8C,KAAb,CAArC,CAAP;AAIH;AAdU,CAAf","sourcesContent":["import axios from 'axios';\nimport qs from 'qs';\n\nconst host = 'v1/ds/dvms/vda';\nconst signIn = 'loginController/signIn'\nconst apiList = 'visualDataModelController/queryTreeDataModels';\nconst dataPreview = 'visualDataModelController/dataPreview';\nconst username = 'admin';\nconst password = 'agreexian!';\n\nlet token = '';\n\nconst signInFn = () => {\n    return new Promise(r,j => {\n        axios.post(\n            `${host}/${signIn}`,\n            qs.stringify({\n                username: username,\n                password: password\n            }),\n            {\n                headers: {\n                }\n            }).then(res => {\n                if (res.status) {\n                    token = res.content.token\n                }else{\n                    j(res.errorMsg);\n                }\n                r(token);\n            }).catch(e=>{\n                j(e);\n            })\n    })\n}\n\nexport default {\n    ready() {\n        return token ? new Promise(r => r(token)) : signInFn();\n    },\n    list() {\n        return axios.post(`${host}/${apiList}`, qs.stringify({\n            token: token\n        }));\n    },\n    data(id) {\n        return axios.post(`${host}/${dataPreview}`, qs.stringify({\n            token: token,\n            dmUid: id\n        }));\n    }\n}"]}]}